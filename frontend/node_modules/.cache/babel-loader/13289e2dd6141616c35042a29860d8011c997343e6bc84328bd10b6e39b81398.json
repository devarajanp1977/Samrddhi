{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  alerts: [],\n  loading: false,\n  error: null\n};\nconst alertsSlice = createSlice({\n  name: 'alerts',\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n      if (action.payload) {\n        state.error = null;\n      }\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    setAlerts: (state, action) => {\n      state.alerts = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    addAlert: (state, action) => {\n      state.alerts.unshift(action.payload);\n    },\n    updateAlert: (state, action) => {\n      const index = state.alerts.findIndex(alert => alert.id === action.payload.id);\n      if (index !== -1) {\n        state.alerts[index] = action.payload;\n      }\n    },\n    markAsRead: (state, action) => {\n      const alert = state.alerts.find(alert => alert.id === action.payload);\n      if (alert) {\n        alert.read = true;\n      }\n    },\n    markAllAsRead: state => {\n      state.alerts.forEach(alert => {\n        alert.read = true;\n      });\n    },\n    removeAlert: (state, action) => {\n      state.alerts = state.alerts.filter(alert => alert.id !== action.payload);\n    },\n    clearExpiredAlerts: state => {\n      const now = new Date().toISOString();\n      state.alerts = state.alerts.filter(alert => !alert.expiresAt || alert.expiresAt > now);\n    }\n  }\n});\nexport const {\n  setLoading,\n  setError,\n  setAlerts,\n  addAlert,\n  updateAlert,\n  markAsRead,\n  markAllAsRead,\n  removeAlert,\n  clearExpiredAlerts\n} = alertsSlice.actions;\nexport default alertsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","alerts","loading","error","alertsSlice","name","reducers","setLoading","state","action","payload","setError","setAlerts","addAlert","unshift","updateAlert","index","findIndex","alert","id","markAsRead","find","read","markAllAsRead","forEach","removeAlert","filter","clearExpiredAlerts","now","Date","toISOString","expiresAt","actions","reducer"],"sources":["/workspaces/Samrddhi/frontend/src/store/slices/alertsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Alert } from '../../types';\n\ninterface AlertsState {\n  alerts: Alert[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: AlertsState = {\n  alerts: [],\n  loading: false,\n  error: null,\n};\n\nconst alertsSlice = createSlice({\n  name: 'alerts',\n  initialState,\n  reducers: {\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n      if (action.payload) {\n        state.error = null;\n      }\n    },\n    setError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    setAlerts: (state, action: PayloadAction<Alert[]>) => {\n      state.alerts = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    addAlert: (state, action: PayloadAction<Alert>) => {\n      state.alerts.unshift(action.payload);\n    },\n    updateAlert: (state, action: PayloadAction<Alert>) => {\n      const index = state.alerts.findIndex(alert => alert.id === action.payload.id);\n      if (index !== -1) {\n        state.alerts[index] = action.payload;\n      }\n    },\n    markAsRead: (state, action: PayloadAction<string>) => {\n      const alert = state.alerts.find(alert => alert.id === action.payload);\n      if (alert) {\n        alert.read = true;\n      }\n    },\n    markAllAsRead: (state) => {\n      state.alerts.forEach(alert => {\n        alert.read = true;\n      });\n    },\n    removeAlert: (state, action: PayloadAction<string>) => {\n      state.alerts = state.alerts.filter(alert => alert.id !== action.payload);\n    },\n    clearExpiredAlerts: (state) => {\n      const now = new Date().toISOString();\n      state.alerts = state.alerts.filter(alert => !alert.expiresAt || alert.expiresAt > now);\n    },\n  },\n});\n\nexport const {\n  setLoading,\n  setError,\n  setAlerts,\n  addAlert,\n  updateAlert,\n  markAsRead,\n  markAllAsRead,\n  removeAlert,\n  clearExpiredAlerts,\n} = alertsSlice.actions;\n\nexport default alertsSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
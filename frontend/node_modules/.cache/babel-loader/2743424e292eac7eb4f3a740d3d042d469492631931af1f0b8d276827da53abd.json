{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  orders: [],\n  loading: false,\n  error: null\n};\nconst ordersSlice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n      if (action.payload) {\n        state.error = null;\n      }\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    setOrders: (state, action) => {\n      state.orders = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    addOrder: (state, action) => {\n      state.orders.unshift(action.payload);\n    },\n    updateOrder: (state, action) => {\n      const index = state.orders.findIndex(order => order.id === action.payload.id);\n      if (index !== -1) {\n        state.orders[index] = action.payload;\n      }\n    },\n    removeOrder: (state, action) => {\n      state.orders = state.orders.filter(order => order.id !== action.payload);\n    },\n    clearOrders: state => {\n      state.orders = [];\n    }\n  }\n});\nexport const {\n  setLoading,\n  setError,\n  setOrders,\n  addOrder,\n  updateOrder,\n  removeOrder,\n  clearOrders\n} = ordersSlice.actions;\nexport default ordersSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","orders","loading","error","ordersSlice","name","reducers","setLoading","state","action","payload","setError","setOrders","addOrder","unshift","updateOrder","index","findIndex","order","id","removeOrder","filter","clearOrders","actions","reducer"],"sources":["/workspaces/Samrddhi/frontend/src/store/slices/ordersSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Order } from '../../types';\n\ninterface OrdersState {\n  orders: Order[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: OrdersState = {\n  orders: [],\n  loading: false,\n  error: null,\n};\n\nconst ordersSlice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n      if (action.payload) {\n        state.error = null;\n      }\n    },\n    setError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    setOrders: (state, action: PayloadAction<Order[]>) => {\n      state.orders = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    addOrder: (state, action: PayloadAction<Order>) => {\n      state.orders.unshift(action.payload);\n    },\n    updateOrder: (state, action: PayloadAction<Order>) => {\n      const index = state.orders.findIndex(order => order.id === action.payload.id);\n      if (index !== -1) {\n        state.orders[index] = action.payload;\n      }\n    },\n    removeOrder: (state, action: PayloadAction<string>) => {\n      state.orders = state.orders.filter(order => order.id !== action.payload);\n    },\n    clearOrders: (state) => {\n      state.orders = [];\n    },\n  },\n});\n\nexport const {\n  setLoading,\n  setError,\n  setOrders,\n  addOrder,\n  updateOrder,\n  removeOrder,\n  clearOrders,\n} = ordersSlice.actions;\n\nexport default ordersSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAS7D,MAAMC,YAAyB,GAAG;EAChCC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,QAAQ;EACdL,YAAY;EACZM,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;MAC9B,IAAID,MAAM,CAACC,OAAO,EAAE;QAClBF,KAAK,CAACL,KAAK,GAAG,IAAI;MACpB;IACF,CAAC;IACDQ,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAA6B,KAAK;MAClDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACN,OAAO,GAAG,KAAK;IACvB,CAAC;IACDU,SAAS,EAAEA,CAACJ,KAAK,EAAEC,MAA8B,KAAK;MACpDD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACC,OAAO;MAC7BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDU,QAAQ,EAAEA,CAACL,KAAK,EAAEC,MAA4B,KAAK;MACjDD,KAAK,CAACP,MAAM,CAACa,OAAO,CAACL,MAAM,CAACC,OAAO,CAAC;IACtC,CAAC;IACDK,WAAW,EAAEA,CAACP,KAAK,EAAEC,MAA4B,KAAK;MACpD,MAAMO,KAAK,GAAGR,KAAK,CAACP,MAAM,CAACgB,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKV,MAAM,CAACC,OAAO,CAACS,EAAE,CAAC;MAC7E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBR,KAAK,CAACP,MAAM,CAACe,KAAK,CAAC,GAAGP,MAAM,CAACC,OAAO;MACtC;IACF,CAAC;IACDU,WAAW,EAAEA,CAACZ,KAAK,EAAEC,MAA6B,KAAK;MACrDD,KAAK,CAACP,MAAM,GAAGO,KAAK,CAACP,MAAM,CAACoB,MAAM,CAACH,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKV,MAAM,CAACC,OAAO,CAAC;IAC1E,CAAC;IACDY,WAAW,EAAGd,KAAK,IAAK;MACtBA,KAAK,CAACP,MAAM,GAAG,EAAE;IACnB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXM,UAAU;EACVI,QAAQ;EACRC,SAAS;EACTC,QAAQ;EACRE,WAAW;EACXK,WAAW;EACXE;AACF,CAAC,GAAGlB,WAAW,CAACmB,OAAO;AAEvB,eAAenB,WAAW,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
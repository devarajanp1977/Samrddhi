{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  id: '',\n  accountNumber: '',\n  totalValue: 0,\n  buyingPower: 0,\n  cash: 0,\n  dayTrades: 0,\n  dayTradesLimit: 3,\n  patternDayTrader: false,\n  status: 'active',\n  type: 'cash',\n  lastUpdated: new Date().toISOString(),\n  loading: false,\n  error: null\n};\nconst accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n      if (action.payload) {\n        state.error = null;\n      }\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    updateAccount: (state, action) => {\n      Object.assign(state, action.payload);\n      state.lastUpdated = new Date().toISOString();\n      state.loading = false;\n      state.error = null;\n    },\n    updateDayTrades: (state, action) => {\n      state.dayTrades = action.payload;\n      state.lastUpdated = new Date().toISOString();\n    },\n    updateBuyingPower: (state, action) => {\n      state.buyingPower = action.payload;\n      state.lastUpdated = new Date().toISOString();\n    },\n    updateCash: (state, action) => {\n      state.cash = action.payload;\n      state.lastUpdated = new Date().toISOString();\n    },\n    setAccountStatus: (state, action) => {\n      state.status = action.payload;\n      state.lastUpdated = new Date().toISOString();\n    }\n  }\n});\nexport const {\n  setLoading,\n  setError,\n  updateAccount,\n  updateDayTrades,\n  updateBuyingPower,\n  updateCash,\n  setAccountStatus\n} = accountSlice.actions;\nexport default accountSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","id","accountNumber","totalValue","buyingPower","cash","dayTrades","dayTradesLimit","patternDayTrader","status","type","lastUpdated","Date","toISOString","loading","error","accountSlice","name","reducers","setLoading","state","action","payload","setError","updateAccount","Object","assign","updateDayTrades","updateBuyingPower","updateCash","setAccountStatus","actions","reducer"],"sources":["/workspaces/Samrddhi/frontend/src/store/slices/accountSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Account } from '../../types';\n\ninterface AccountState extends Account {\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: AccountState = {\n  id: '',\n  accountNumber: '',\n  totalValue: 0,\n  buyingPower: 0,\n  cash: 0,\n  dayTrades: 0,\n  dayTradesLimit: 3,\n  patternDayTrader: false,\n  status: 'active',\n  type: 'cash',\n  lastUpdated: new Date().toISOString(),\n  loading: false,\n  error: null,\n};\n\nconst accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n      if (action.payload) {\n        state.error = null;\n      }\n    },\n    setError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    updateAccount: (state, action: PayloadAction<Partial<Account>>) => {\n      Object.assign(state, action.payload);\n      state.lastUpdated = new Date().toISOString();\n      state.loading = false;\n      state.error = null;\n    },\n    updateDayTrades: (state, action: PayloadAction<number>) => {\n      state.dayTrades = action.payload;\n      state.lastUpdated = new Date().toISOString();\n    },\n    updateBuyingPower: (state, action: PayloadAction<number>) => {\n      state.buyingPower = action.payload;\n      state.lastUpdated = new Date().toISOString();\n    },\n    updateCash: (state, action: PayloadAction<number>) => {\n      state.cash = action.payload;\n      state.lastUpdated = new Date().toISOString();\n    },\n    setAccountStatus: (state, action: PayloadAction<'active' | 'restricted' | 'suspended'>) => {\n      state.status = action.payload;\n      state.lastUpdated = new Date().toISOString();\n    },\n  },\n});\n\nexport const {\n  setLoading,\n  setError,\n  updateAccount,\n  updateDayTrades,\n  updateBuyingPower,\n  updateCash,\n  setAccountStatus,\n} = accountSlice.actions;\n\nexport default accountSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAQ7D,MAAMC,YAA0B,GAAG;EACjCC,EAAE,EAAE,EAAE;EACNC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE,CAAC;EACdC,IAAI,EAAE,CAAC;EACPC,SAAS,EAAE,CAAC;EACZC,cAAc,EAAE,CAAC;EACjBC,gBAAgB,EAAE,KAAK;EACvBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACrCC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,YAAY,GAAGjB,WAAW,CAAC;EAC/BkB,IAAI,EAAE,SAAS;EACfjB,YAAY;EACZkB,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;MAC9B,IAAID,MAAM,CAACC,OAAO,EAAE;QAClBF,KAAK,CAACL,KAAK,GAAG,IAAI;MACpB;IACF,CAAC;IACDQ,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAA6B,KAAK;MAClDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACN,OAAO,GAAG,KAAK;IACvB,CAAC;IACDU,aAAa,EAAEA,CAACJ,KAAK,EAAEC,MAAuC,KAAK;MACjEI,MAAM,CAACC,MAAM,CAACN,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;MACpCF,KAAK,CAACT,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC5CO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDY,eAAe,EAAEA,CAACP,KAAK,EAAEC,MAA6B,KAAK;MACzDD,KAAK,CAACd,SAAS,GAAGe,MAAM,CAACC,OAAO;MAChCF,KAAK,CAACT,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAC9C,CAAC;IACDe,iBAAiB,EAAEA,CAACR,KAAK,EAAEC,MAA6B,KAAK;MAC3DD,KAAK,CAAChB,WAAW,GAAGiB,MAAM,CAACC,OAAO;MAClCF,KAAK,CAACT,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAC9C,CAAC;IACDgB,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAA6B,KAAK;MACpDD,KAAK,CAACf,IAAI,GAAGgB,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACT,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAC9C,CAAC;IACDiB,gBAAgB,EAAEA,CAACV,KAAK,EAAEC,MAA4D,KAAK;MACzFD,KAAK,CAACX,MAAM,GAAGY,MAAM,CAACC,OAAO;MAC7BF,KAAK,CAACT,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAC9C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXM,UAAU;EACVI,QAAQ;EACRC,aAAa;EACbG,eAAe;EACfC,iBAAiB;EACjBC,UAAU;EACVC;AACF,CAAC,GAAGd,YAAY,CAACe,OAAO;AAExB,eAAef,YAAY,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
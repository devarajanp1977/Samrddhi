import { 
  Portfolio, 
  Position, 
  Order, 
  Strategy, 
  Account, 
  MarketData, 
  Alert, 
  SystemHealth 
} from '../types';

export const mockPortfolio: Portfolio = {
  totalValue: 393.00,
  totalCost: 393.00,
  totalPnL: 0.00,
  totalPnLPercent: 0.00,
  dayPnL: 0.00,
  dayPnLPercent: 0.00,
  buyingPower: 393.00,
  cash: 393.00,
  positions: [],
  lastUpdated: new Date().toISOString(),
};

export const mockPositions: Position[] = [];

export const mockAccount: Account = {
  id: 'acc_001',
  accountNumber: 'RH123456789',
  totalValue: 393.00,
  buyingPower: 393.00,
  cash: 393.00,
  dayTrades: 0,
  dayTradesLimit: 3,
  patternDayTrader: false,
  status: 'active',
  type: 'cash',
  lastUpdated: new Date().toISOString(),
};

export const mockOrders: Order[] = [];

export const mockStrategies: Strategy[] = [
  {
    id: 'strategy_001',
    name: 'Momentum Scalper',
    description: '5-7% profit target scalping strategy for stocks under $10',
    type: 'momentum',
    status: 'inactive',
    riskLevel: 'medium',
    targetProfit: 6.0,
    maxLoss: 2.0,
    timeframe: '5m',
    symbols: ['AAPL', 'MSFT', 'GOOGL'],
    parameters: {
      rsi_threshold: 70,
      volume_multiplier: 2.0,
      breakout_confirmation: true,
    },
    performance: {
      totalTrades: 0,
      winRate: 0,
      avgProfit: 0,
      avgLoss: 0,
      profitFactor: 0,
      sharpeRatio: 0,
    },
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
];

export const mockMarketData: Record<string, MarketData> = {
  AAPL: {
    symbol: 'AAPL',
    price: 175.84,
    change: 2.15,
    changePercent: 1.24,
    volume: 42580000,
    high: 176.50,
    low: 173.25,
    open: 174.00,
    close: 175.84,
    timestamp: new Date().toISOString(),
    bid: 175.83,
    ask: 175.85,
    bidSize: 500,
    askSize: 300,
  },
  MSFT: {
    symbol: 'MSFT',
    price: 420.55,
    change: -1.85,
    changePercent: -0.44,
    volume: 18750000,
    high: 422.80,
    low: 419.50,
    open: 421.20,
    close: 420.55,
    timestamp: new Date().toISOString(),
    bid: 420.54,
    ask: 420.56,
    bidSize: 200,
    askSize: 400,
  },
  GOOGL: {
    symbol: 'GOOGL',
    price: 2785.60,
    change: 15.40,
    changePercent: 0.56,
    volume: 1240000,
    high: 2790.25,
    low: 2770.10,
    open: 2775.30,
    close: 2785.60,
    timestamp: new Date().toISOString(),
    bid: 2785.55,
    ask: 2785.65,
    bidSize: 100,
    askSize: 150,
  },
  AMZN: {
    symbol: 'AMZN',
    price: 3380.75,
    change: -12.85,
    changePercent: -0.38,
    volume: 3580000,
    high: 3395.50,
    low: 3375.20,
    open: 3390.40,
    close: 3380.75,
    timestamp: new Date().toISOString(),
    bid: 3380.70,
    ask: 3380.80,
    bidSize: 80,
    askSize: 120,
  },
  TSLA: {
    symbol: 'TSLA',
    price: 251.45,
    change: 8.75,
    changePercent: 3.61,
    volume: 65240000,
    high: 253.80,
    low: 245.30,
    open: 246.50,
    close: 251.45,
    timestamp: new Date().toISOString(),
    bid: 251.43,
    ask: 251.47,
    bidSize: 300,
    askSize: 250,
  },
  NVDA: {
    symbol: 'NVDA',
    price: 875.30,
    change: 22.15,
    changePercent: 2.59,
    volume: 28950000,
    high: 880.50,
    low: 865.75,
    open: 870.20,
    close: 875.30,
    timestamp: new Date().toISOString(),
    bid: 875.28,
    ask: 875.32,
    bidSize: 150,
    askSize: 200,
  },
  META: {
    symbol: 'META',
    price: 505.25,
    change: -3.45,
    changePercent: -0.68,
    volume: 12750000,
    high: 508.80,
    low: 502.10,
    open: 507.50,
    close: 505.25,
    timestamp: new Date().toISOString(),
    bid: 505.23,
    ask: 505.27,
    bidSize: 180,
    askSize: 220,
  },
  NFLX: {
    symbol: 'NFLX',
    price: 485.90,
    change: 7.20,
    changePercent: 1.50,
    volume: 4580000,
    high: 488.30,
    low: 480.15,
    open: 482.40,
    close: 485.90,
    timestamp: new Date().toISOString(),
    bid: 485.88,
    ask: 485.92,
    bidSize: 120,
    askSize: 160,
  },
};

export const mockAlerts: Alert[] = [
  {
    id: 'alert_001',
    type: 'info',
    title: 'System Ready',
    message: 'SAMRDDHI trading platform is ready for operation',
    severity: 'low',
    read: false,
    createdAt: new Date().toISOString(),
  },
  {
    id: 'alert_002',
    type: 'warning',
    title: 'Backend Disconnected',
    message: 'Backend services are not running. Start backend services to enable live trading.',
    severity: 'high',
    read: false,
    createdAt: new Date().toISOString(),
  },
];

export const mockSystemHealth: SystemHealth = {
  status: 'degraded',
  services: {
    'api-gateway': {
      status: 'down',
      latency: 0,
      lastCheck: new Date().toISOString(),
    },
    'portfolio-service': {
      status: 'down',
      latency: 0,
      lastCheck: new Date().toISOString(),
    },
    'market-data-service': {
      status: 'down',
      latency: 0,
      lastCheck: new Date().toISOString(),
    },
  },
  marketDataStatus: 'disconnected',
  tradingStatus: 'disabled',
  lastUpdated: new Date().toISOString(),
};
